{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{% macro menu_link(menu_item) %}
  {% if menu_item is defined and menu_item is not null %}
    {% if menu_item.content['#url'].external %}
      <a class="list-item" href="{{ menu_item.content['#url'].uri }}">
        <span class="text-button-normal">{{ menu_item.content['#title'] }}</span>
      </a>
    {% else %}
      <a class="list-item" href="{{ path(menu_item.content['#url'].routeName, menu_item.content['#url'].routeParameters, menu_item.content['#url'].options) }}">
        <span class="text-button-normal">{{ menu_item.content['#title'] }}</span>
      </a>
    {% endif %}
  {% endif %}
{% endmacro %}

{%
  set classes = [
  'field',
  'field--name-' ~ field_name|clean_class,
  'field--type-' ~ field_type|clean_class,
  'field--label-' ~ label_display,
  label_display == 'inline' ? 'clearfix',
]
%}
{%
  set title_classes = [
  'field__label',
  label_display == 'visually_hidden' ? 'visually-hidden',
]
%}

{% if label_hidden %}
  {% if multiple %}
    {% for item in items %}
      <li>
        {{ _self.menu_link(item, ) }}
      </li>
    {% endfor %}
  {% else %}
    {% for item in items %}
      <li>
        {{ _self.menu_link(item, ) }}
      </li>
    {% endfor %}
  {% endif %}
{% else %}
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
    {% if multiple %}
      {% endif %}
      {% for item in items %}
        <li>
          {{ _self.menu_link(item, ) }}
        </li>
      {% endfor %}
      {% if multiple %}
    {% endif %}
{% endif %}
