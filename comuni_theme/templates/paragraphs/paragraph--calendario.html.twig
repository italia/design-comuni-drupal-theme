{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    "container"
  ]
%}

{% set calendarDisplays = {
    0 : "day_1",
    1 : "day_2",
    2 : "day_3",
    3 : "day_4",
    4 : "day_5",
    5 : "day_6",
    6 : "day_7",
  }
%}

{% block paragraph %}
  {# <div{{ attributes.addClass(classes) }}> #}
    <div class="row row-calendar">
      <div class="it-carousel-wrapper it-carousel-landscape-abstract-four-cols it-calendar-wrapper splide" data-bs-carousel-splide>
        <div class="it-header-block">
          <div class="it-header-block-title">
            {% set currentMonth = "now"|date("M")|monthEn2It(false) %}
            {% set currentYear = "now"|date("Y") %}
            {% set currentDay = "now"|date("d")%}
            {% set currentDayName = "now"|date("D")|dayEn2It %}
            {% set interval = "+ " ~ 7 ~ " day" %}
            {% set newCurrentMonth = "now"|date_modify(interval)|date("M")|monthEn2It(false) %}
            {% set newCurrentYear = "now"|date_modify(interval)|date("Y") %}
            {% if newCurrentYear != currentYear %}
              <h3 class="mb-0 text-center home-carousel-title">{{ currentMonth ~ " " ~ currentYear ~ " - " ~ newCurrentMonth ~ " " ~ newCurrentYear }}</h3>
            {% elseif newCurrentMonth != currentMonth %}
              <h3 class="mb-0 text-center home-carousel-title">{{ currentMonth ~ "/" ~ newCurrentMonth ~ " " ~ currentYear }}</h3>
            {% else %}
              <h3 class="mb-0 text-center home-carousel-title">{{ currentMonth ~ " " ~ currentYear }}</h3>
            {% endif %}
          </div>
        </div>
        <div class="splide__track">
          <ul class="splide__list it-carousel-all">
            {% for i in 0..6 %}
              {% if i != 0 %}
                {% set interval = "+ " ~ i ~ " day" %}
                {% set currentDay = "now"|date_modify(interval)|date("d")%}
                {% set currentDayName = "now"|date_modify(interval)|date("D")|dayEn2It %}
              {% endif %}
              <li class="splide__slide">
                <div class="it-single-slide-wrapper h-100">
                  <div class="card-wrapper h-100">
                    <div class="card card-bg">
                      <div class="card-body">
                        <h4 class="card-title pb-4 mb-10">{{ currentDay }}<span>{{ currentDayName }}</span></h4>
                        {{ drupal_view("calendario", calendarDisplays[i]) }}
                      </div>
                    </div>
                  </div>
                </div>
              </li>
            {% endfor %}
          </ul>
        </div>
      </div>
    </div>
  {# </div> #}
{% endblock paragraph %}
