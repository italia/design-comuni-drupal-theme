{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}
{% block paragraph %}
  <div class="ratio ratio-16x9 my-4">
    <iframe class="embed-responsive-item" title="Video YouTube" src="{{ content.field_id_video_youtube.0['#context'].value }}" allowfullscreen=""></iframe>
  </div>
  <div class="accordion border-0 mb-4" id="videoTranscription">
    <div class="accordion-item">
      <div class="accordion-header" id="heading1c">
        <button class="accordion-button title-snall-semi-bold py-3 collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse1c" aria-expanded="false" aria-controls="collapse1c">
          <div class="button-wrapper d-flex">
            Trascrizione del video
            <div class="icon-wrapper">
              <svg class="icon icon-sm me-1 icon-primary" viewBox="0 0 24 24" id="it-expand" xmlns="http://www.w3.org/2000/svg"><path d="M11.6 15.4L6 9.8l.7-.8 4.9 4.9L16.5 9l.7.8z"/></svg>
            </div>
          </div></button>
      </div>
      {%  if content.field_testo_introduttivo.0 is not empty %}
        <div id="collapse1c" class="accordion-collapse p-0 collapse" data-bs-parent="#videoTranscription" role="region" aria-labelledby="heading1c" style="">
          <div class="accordion-body ps-0 pb-4">
            <p class="font-serif mb-0">{{ content.field_testo_introduttivo }}</p>
          </div>
        </div>
      {% endif %}
    </div>
  </div>
  <p class="font-serif">{{ content.field_didascalia }}</p>
{% endblock paragraph %}
