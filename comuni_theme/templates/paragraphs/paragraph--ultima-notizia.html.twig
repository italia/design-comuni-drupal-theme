{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',

  ]
%}

{% set months = {
    'January': 'Gen',
    'February': 'Feb',
    'March': 'Mar',
    'April': 'Apr',
    'May': 'Mag',
    'Jun': 'Giu',
    'July': 'Lug',
    'August': 'Ago',
    'September': 'Set',
    'October': 'Ott',
    'November': 'Nov',
    'December': 'Dic',
  }
%}
{% if content.field_contenuto.0 %}
  {% set node = paragraph.field_contenuto.entity %}

  {% if node.field_data_della_notizia.value is defined and node.field_data_della_notizia.value is not empty and node.field_data_della_notizia.value is not null %}
  {% set dataNotizia = node.field_data_della_notizia.value %}
  {% set day = dataNotizia|date("d") %}
  {% set month = months[dataNotizia|date("M")] %}
  {% set year = dataNotizia|date("Y") %}
  {% set dataNotizia = day ~ " " ~ month ~ " " ~ year %}
{% else %}
  {% set dataNotizia = node.created.value %}
{% endif %}
{% endif %}


{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
    <h1 class="visually-hidden" id="main-container">
      {{ site_settings.infocomune.info_comune.field_nome_comune }}
    </h1>
		<section id="head-section">
      <h2 class="visually-hidden">Contenuti in evidenza</h2>
			<div class="container">
        {% if node %}
				<div class="row">
					<div class="col-lg-5 order-lg-1">
						<div class="card mb-5">
							<div class="card-body pb-5">
								<div class="category-top">
									<svg class="icon icon-sm" viewBox="0 0 24 24" id="it-calendar" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                    <path d="M20.5 4H17V3h-1v1H8V3H7v1H3.5A1.5 1.5 0 002 5.5v13A1.5 1.5 0 003.5 20h17a1.5 1.5 0 001.5-1.5v-13A1.5 1.5 0 0020.5 4zm.5 14.5a.5.5 0 01-.5.5h-17a.5.5 0 01-.5-.5v-13a.5.5 0 01.5-.5H7v1h1V5h8v1h1V5h3.5a.5.5 0 01.5.5zM4 8h16v1H4z"/>
                    <path fill="none" d="M0 0h24v24H0z"/>
                  </svg>
									<span class="title-xsmall-semi-bold fw-semibold">Notizie</span>
									<span class="data fw-normal">{{dataNotizia}}</span>
								</div>
                <a href="{{ path('entity.node.canonical', {'node':  node.id})  }}"
                  class="text-decoration-none"
                >
								  <h3 class="h4 card-title title-xlarge u-main-primary">{{ node.title.value }}</h3>
                </a>
								<p class="mb-4 subtitle-small pt-3 lora">{{ node.field_descrizione_breve.value }}</p>
								{% for argomento in node.field_argomenti %}
                  <div class="chip chip-simple">
                    <a href="{{path('entity.taxonomy_term.canonical', {'taxonomy_term': argomento.target_id})}}"
                      class="chip-label"
                    >{{ argomento.entity.name.value }}</a>
                  </div>
                {% endfor %}
								<a class="read-more pb-3" href="/novita">
									<span class="text">Tutte le novit√†</span>
									<svg class="icon" viewBox="0 0 24 24" id="it-arrow-right" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.9 5.4l-.7.7 5.3 5.4H3v1h15.5l-5.3 5.4.7.7 6.6-6.6zM19 12z"/>
                    <path fill="none" d="M0 0h24v24H0z"/>
                  </svg>
								</a>
							</div>
						</div>
					</div>
          <div class="col-lg-6 offset-lg-1 order-lg-2 px-0 px-lg-2">
            <img src="{{ file_url(node.field_immagine.entity.field_media_image.entity.fileuri) }}" class="img-fluid"
              title="{{ node.field_immagine.entity.field_media_image.alt }}"
              alt="{{ node.field_immagine.entity.field_media_image.alt }}"
            >
          </div>
				</div>
        {% endif %}
			</div>
		</section>
	</div>
{% endblock paragraph %}
