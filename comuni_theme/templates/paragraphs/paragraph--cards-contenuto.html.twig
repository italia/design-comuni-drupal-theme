{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
		{% block content %}
			{% if attribute(content.field_alt_bg.0, "#markup") == "true" %}
			<div class="bg-grey-card">
			{% endif %}
				<div class="container">
					<div class="row">
						<div class="col-12">
							<h2 class="title-xxlarge mt-60 mb-4 mt-lg-80 mb-lg-40">{{ content.field_titolo }}</h2>
							<div class="row flex-wrap justify-content-between gy-3 gy-lg-5 gx-lg-5 pb-3 pb-lg-60 align-items-stretch">
								{% for card in attribute(content.field_cards_contenuto, "#items") %}
								<div class="col-12 col-lg-4">
									<div class="cmp-card-simple card-wrapper pb-0">
										<div class="card shadow rounded">
											<div class="card-body">
												<h3 class="card-title t-primary title-xlarge">{{ card.entity.field_contenuto.entity.field_intestazione.entity.field_titolo.value }}</h3>
												{# <div class="titillium text-paragraph mb-4">{{ card.entity.field_contenuto.entity.field_intestazione.entity.field_descrizione.value|raw }}</div> #}
												<p class="titillium text-paragraph mb-4">{{ card.entity.field_contenuto.entity.field_intestazione.entity.field_descrizione.value }}</p>
												<a class="read-more mt-4" href="{{ path('entity.taxonomy_term.canonical', {'taxonomy_term': card.entity.field_contenuto.target_id}) }}">
													<span class="text text-button-semi">Vai alla pagina</span>
													<span class="visually-hidden">su Lorem ipsum dolor sit amet, consectetur adipiscing elitâ€¦</span>
													{# TODO: #}{# <svg class="icon icon-primary icon-xs ml-10"><use href="./assets/bootstrap-italia/dist/svg/sprite.svg#it-arrow-right"></use></svg> #}
												</a>
											</div>
										</div>
									</div>
								</div>
								{% endfor %}
							</div>
						</div>
					</div>
				</div>
			{% if content.field_alt_bg %}
			</div>
			{% endif %}
		{% endblock %}
	</div>
{% endblock paragraph %}
