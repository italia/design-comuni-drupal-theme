{#
/**
 * @file
 * Bartik's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
<div class="card card-teaser card-teaser-info rounded shadow-sm p-3 border border-light">
  <svg class="icon" viewBox="0 0 24 24" id="it-telephone" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
    <path d="M5 3h.18M20 11.56A7.59 7.59 0 0012.48 4h-.06a.49.49 0 00-.49.48.5.5 0 00.49.51A6.61 6.61 0 0119 11.62a.51.51 0 00.54.46.49.49 0 00.45-.46s.01-.04.01-.06z" />
    <path d="M16.93 11.68a4.5 4.5 0 00-4.48-4.48.51.51 0 000 1 3.5 3.5 0 013.49 3.49.5.5 0 00.5.5.51.51 0 00.5-.51zM15.68 21.19a13.32 13.32 0 01-12.8-13.1.92.92 0 01.62-.88c1.74-.56 4-1 4.7.06a7.39 7.39 0 01.85 2.91v.21a1.48 1.48 0 01-.7 1.68.81.81 0 00-.49.71 12.55 12.55 0 003.38 3.51.88.88 0 00.48-.56c.09-.53.58-1 1.7-.85h.21a7 7 0 012.85.87c1 .72.62 3 .09 4.72a1 1 0 01-.89.72zM6.55 7.52a9.5 9.5 0 00-2.78.55 12.41 12.41 0 0011.91 12.22c.73-2.26.66-3.54.31-3.78a6.66 6.66 0 00-2.46-.72h-.22c-.32 0-.65 0-.68.12a1.9 1.9 0 01-1.27 1.34l-.21.07-.15-.15a13.44 13.44 0 01-3.9-4L7 13a1.68 1.68 0 011-1.7c.12-.07.33-.18.25-.75v-.22a6.84 6.84 0 00-.7-2.54c-.2-.18-.55-.27-1-.27z" />
  </svg>
  
  <div class="card-body">
    <p class="card-title text-paragraph-regular-medium-semi mb-3">{{ label }}</p>
    <div class="card-text">
      <div class="mb-1">{{ content.field_contatto }}</div>
      <div class="mb-1">{{ content.field_persona }}</div>
      {% if content.field_orari[0] is not empty %}
        <a class="btn btn-xs btn-primary card-title mt-2" href="javascript: void(0);" data-bs-toggle="collapse" data-bs-target="#punto-di-contatto-{{ node.id }}">Vedi orari <i aria-hidden="true" class="fa fa-caret-down"></i></a>
        <div id="punto-di-contatto-{{ node.id }}" class="collapse lightgrey-bg-c1 p-2">
          <div class="mb-1">{{ content.field_orari_note }}</div>
          <div class="">
            {% for item in attribute(content.field_orari, "#items") %}
              <dl class="servizio-contatto-orari row mb-1">
                <dt class="col-6 text-nowrap"><span>{{ item.entity.field_orari_giorni.value }}</span></dt>
                <dd class="col-6">
                  {% for item_ora in item.entity.field_orari_giorni.entity.field_fascia_oraria %}
                      <span class="text-nowrap">{{ item_ora.entity.field_orari_fascia_oraria.from|date('H:i') }} - {{ item_ora.entity.field_orari_fascia_oraria.to|date('H:i') }}</span><span class="nascondi-ultimo">,</span>
                  {% endfor %}
                </dd>
              </dl>
            {% endfor %}
          </div>
        </div>
      {% endif %}
    </div>
  </div>
</div>