{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
] %}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <section class="useful-links-section">
        <div class="section section-muted p-0 py-5">
          <div class="container">
            <div class="row d-flex justify-content-center">
              <div class="col-12 col-lg-6">
                <form action="/risultati-ricerca">
                  <div class="cmp-input-search">
                    <div class="form-group autocomplete-wrapper mb-2 mb-lg-4">
                      <div class="input-group">
                        <label for="autocomplete-autocomplete-three" class="visually-hidden">Cerca una parola
                          chiave</label>
                        <input type="text" class="autocomplete form-control"
                               placeholder="{{ content.field_label.0['#context']['value'] }}"
                               id="autocomplete-autocomplete-three" name="search_api_fulltext" data-bs-autocomplete="[]"
                               data-focus-mouse="false">
                        <div class="input-group-append">
                          <button class="btn btn-primary" type="button" id="button-3">Invio</button>
                        </div>
                        <span class="autocomplete-icon" aria-hidden="true">
                                              <svg class="icon icon-sm icon-primary" viewBox="0 0 24 24" id="it-search"
                                                   xmlns="http://www.w3.org/2000/svg"><path
                                                  d="M21.9 21.1L16 15.3a8.3 8.3 0 002-5.3 8 8 0 10-8 8 8.3 8.3 0 005.3-2l5.8 5.9zM10 17a7 7 0 117-7 7 7 0 01-7 7z"/><path
                                                  fill="none" d="M0 0h24v24H0z"/></svg>

                    </span>
                      </div>
                    </div>
                  </div>
                  <div class="link-list-wrapper">
                    <div class="link-list-heading text-uppercase mb-3 ps-0">Link utili</div>
                    <ul class="link-list" role="list">
                      {{ content.field_links }}
                    </ul>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </section>
    {% endblock %}
  </div>
{% endblock paragraph %}
