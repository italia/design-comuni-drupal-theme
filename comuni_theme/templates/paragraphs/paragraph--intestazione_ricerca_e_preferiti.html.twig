{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
		{% block content %}
			{% set intestazione_paragraph = attribute(content.field_intestazione.0, "#paragraph") %}
			{# CONTAINER #}
			<div class="container container px-4 my-4" id="main-container">
				<div class="row">
					{# LEFT COLUMN #}
					<div class="col-lg-7 px-lg-2 py-lg-2">
						{# titolo e descrizione #}
						<div class="row">
							<div class="col">
								<h1>{{ intestazione_paragraph.field_titolo.value }}</h1>
								<p>{{ intestazione_paragraph.field_descrizione.value }}</p>
							</div>
						</div>
						{# ricerca #}
						<div class="row">
							<div class="col py-5">
								<form action="/risultati-ricerca">
									<div class="input-search-wrapper">
										<div class="input-group">
                      <input type="hidden" name="search_api_fulltext" >
                      <input class="form-control" id="input-1" type="arr" name="name" placeholder="Cerca argomenti">
                      <div class="input-group-append">
												<button class="btn btn-primary btn-icon" type="submit" id="button-search" role="button">
													<svg viewBox="0 0 24 24" id="it-search" xmlns="http://www.w3.org/2000/svg" class="icon icon-white">
														<path d="M21.9 21.1L16 15.3a8.3 8.3 0 002-5.3 8 8 0 10-8 8 8.3 8.3 0 005.3-2l5.8 5.9zM10 17a7 7 0 117-7 7 7 0 01-7 7z"/>
														<path fill="none" d="M0 0h24v24H0z"/>
													</svg>
												</button>
											</div>
										</div>
									</div>
								</form>
							</div>
						</div>
					</div>
					{# RIGHT COLUMN #}
					<div class="col-lg-3 offset-lg-2">
						{# preferiti #}
						<div class="link-list-wrapper mt-3">
							<ul class="link-list">
								<li>
									<h3 class="text-uppercase">{{ content.field_preferiti_titolo }}</h3>
								</li>
								{% for preferito in attribute(content.field_preferiti, '#items') %}
									<li>
										<a class="list-item"
											href="{{ path('entity.taxonomy_term.canonical', {'taxonomy_term': preferito.entity.tid.value })}}"
										>
											<span>{{ preferito.entity.name.value }}</span>
										</a>
									</li>
								{% endfor %}
							</ul>
						</div>
					</div>
				</div>
			</div>
		</div>
	{% endblock %}
</div>{% endblock paragraph %}
